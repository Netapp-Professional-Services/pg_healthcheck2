{
  "duplicate_indexes_found": {
    "metric_keywords": [
      "duplicate_indexes"
    ],
    "data_conditions": [
      {
        "key": "index_name",
        "exists": true
      }
    ],
    "rules": [
      {
        "expression": "True",
        "level": "medium",
        "score": 3,
        "reasoning": "Duplicate index '{data.get('index_name')}' found on table '{data.get('table_name')}', providing no benefit while adding write overhead.",
        "recommendations": [
          "Drop the redundant index to reduce storage space and improve the performance of INSERT, UPDATE, and DELETE operations. Keep only one of the duplicate indexes."
        ]
      }
    ]
  },
  "invalid_indexes_found": {
    "metric_keywords": [
      "invalid_indexes"
    ],
    "data_conditions": [
      {
        "key": "index_name",
        "exists": true
      }
    ],
    "rules": [
      {
        "expression": "True",
        "level": "critical",
        "score": 5,
        "reasoning": "Invalid index '{data.get('index_name')}' found on table '{data.get('table_name')}'. It is unusable and wastes space.",
        "recommendations": [
          "Rebuild the index immediately to make it usable by the query planner. Use 'REINDEX INDEX CONCURRENTLY {data.get('index_name')};' to avoid locking the table."
        ]
      }
    ]
  }
}