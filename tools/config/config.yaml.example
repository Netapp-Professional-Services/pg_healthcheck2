# AI Configuration (used by both main healthcheck and aidev.py)
ai_provider: openai  # or google, grok, arbitrary
ai_endpoint: https://your_ai_endpoint.com/  # https://your-corporate-llm-proxy.com/, https://api.x.ai/, https://generativelanguage.googleapis.com

ai_api_key: ${AI_API_KEY}  # Or hardcode if not using env vars
ai_temperature: 0.1 # The lower the better
ai_max_output_tokens: 16384 # Maximum number of tokens (words/pieces of words) the AI should generate in its response.
ai_timeout: 300  # 5 minutes

# Corporate Proxy Settings (optional)
ai_user: your-username
ai_user_header: X-User-ID  # Custom header name if required

# Required in some environments - OSX option shown...  Comment out if not needed.

# ssl_cert_path: /opt/homebrew/etc/openssl@3/certs/../cert.pem  

ai_ssl_verify: true  # Set to false to disable SSL verification (not recommended)


# --- Model Definitions ---
# Depending on the stage of the operation, aidev can use a different AI models for those operations.

#
# This is the default/fallback model if the below models are not configured.
ai_model: "gpt-4o" # grok-4-fast
 
# For high-level planning and difficult corrections
high_reasoning_model: "gpt-4o" # gpt-4-turbo, grok-4-fast

# For standard code generation
generation_model: "gpt-4o" # grok-code-fast-1, gpt-3.5-turbo, grok-4-fast

# For fast intent recognition
fast_model: "gpt-3.5-turbo" # grok-4-fast-non-reasoning, gpt-4o


# Integration Testing
integration_tests:
  enabled: true                    # Enable integration testing during check generation
  auto_correct: true               # Allow AI to auto-correct test failures
  max_correction_attempts: 3       # Maximum AI correction attempts
  
  # Database versions for testing
  postgres_version: "17"
  mongodb_version: "7.0"
  valkey_version: "7.2"
  cassandra_version: "4.1"
  kafka_version: "latest"          # Redpanda version (Kafka-compatible, fast startup)
  use_redpanda: true               # Use Redpanda instead of Apache Kafka (much faster)

  # Container settings
  container_timeout: 120            # Seconds to wait for container startup
  cleanup_containers: true         # Stop containers after tests
